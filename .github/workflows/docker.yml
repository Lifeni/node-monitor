name: Build and Publish Docker Image

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  push-server:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm i -g pnpm && pnpm i
      - run: lerna bootstrap --scope server
      - run: lerna bootstrap --scope server build

      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: packages/server
          push: true
          tags: |
            lifeni/monitor-server:${{ steps.vars.outputs.tag }}
            lifeni/monitor-server:latest

  push-client:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm i -g pnpm && pnpm i
      - run: lerna bootstrap --scope client
      - run: lerna bootstrap --scope client build

      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: packages/client
          push: true
          tags: |
            lifeni/monitor-client:${{ steps.vars.outputs.tag }}
            lifeni/monitor-client:latest
